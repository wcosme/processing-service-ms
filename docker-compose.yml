version: '3.8'

services:
  processing-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: processing-service
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb-processing:27017/processing
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - mongodb-processing
      - redis-processing
      - kafka
    networks:
      - processing-network

  mongodb-processing:
    image: mongo:5.0
    container_name: mongodb-processing
    ports:
      - "27018:27017"
    networks:
      - processing-network
    volumes:
      - mongodb_processing_data:/data/db

  redis-processing:
    image: redis:7
    container_name: redis-processing
    ports:
      - "6380:6379"
    volumes:
      - redis_processing_data:/data
    networks:
      - processing-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - processing-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - processing-network

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    depends_on:
      - kafka
    networks:
      - processing-network

networks:
  processing-network:
    driver: bridge

volumes:
  mongodb_processing_data:
  redis_processing_data: